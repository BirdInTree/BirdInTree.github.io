[{"title":"C语言学习笔记","url":"http://yoursite.com/2020/08/06/C语言学习笔记/","content":"<h2 id=\"C语言malloc与memset在二维数组上的运用\"><a href=\"#C语言malloc与memset在二维数组上的运用\" class=\"headerlink\" title=\"C语言malloc与memset在二维数组上的运用\"></a>C语言malloc与memset在二维数组上的运用</h2><p>1.malloc函数，用于从堆上分配指定字节的内存空间。</p>\n<p>void * malloc(size_t n);<br>n为要求分配的内存<strong>字节</strong>数。如果执行成功，函数返回获得的内存空间的首地址；执行失败，返回值为NULL。</p>\n<p>由于函数返回值值的类型为void的指针，因此，可以将void指针<strong>类型转换后</strong>赋值给任意类型指针，这样就可以通过操作该类型指针来操作从堆上获得的内存空间。</p>\n<p>malloc函数分配得到的内存空间是未初始化的。有时候，在使用前需要对该内存空间进行初始化，此时用上memset。</p>\n<p>2.memset函数</p>\n<p>void * memset (void * p,int c,size_t n);</p>\n<p>指针p为所操作的内存空间的<strong>首地址</strong>，c为<strong>每个字节</strong>（8bit）所赋的值，n为所操作内存空间的字节长度，也就是内存被赋值为c的字节数。</p>\n<p>注意的它是以字节为单位进行赋值的，赋值范围是0x00～0xFF。</p>\n<h2 id=\"在多维数组上的应用\"><a href=\"#在多维数组上的应用\" class=\"headerlink\" title=\"在多维数组上的应用\"></a>在多维数组上的应用</h2><p>  <code>double **weight; //二维数组weight[n][m]</code></p>\n<p>  <code>weight=(double**)malloc(n*sizeof(double*)); //注意是sizeof里头是double*而不是double。该维装的是指针</code></p>\n<p>  <code>int i=0;</code><br>  <code>for(;i&lt;n;i++)&#123;</code><br>    <code>weight[i]=(double*)malloc(n*sizeof(double));</code><br>    <code>memset(weight[i],0,n*sizeof(double));  //正确。注意是对weight[i]，而不是weight</code><br>  <code>&#125;</code></p>\n<p> //memset(weight,0,sizeof(n<em>n</em>sizeof(double)); </p>\n<p>  //这样的统一对整个二维数组初始化是错误的，因为该二维数组是<strong>通过分次malloc得到</strong>的，各内存不一定连续</p>\n","categories":[],"tags":[]},{"title":"mathjix——text","url":"http://yoursite.com/2020/08/06/hello-world/","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\frac&#123;\\partial u&#125;&#123;\\partial t&#125; &#x3D; h^2 \\left( \\frac&#123;\\partial^2 u&#125;&#123;\\partial x^2&#125; + \\frac&#123;\\partial^2 u&#125;&#123;\\partial y^2&#125; + \\frac&#123;\\partial^2 u&#125;&#123;\\partial z^2&#125;\\right)</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[]},{"title":"","url":"http://yoursite.com/css/personal-style.css","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  /*background-image: url('/images/bg.jpg')*/\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","categories":[],"tags":[]}]